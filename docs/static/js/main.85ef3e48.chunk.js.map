{"version":3,"sources":["components.js/AddCategory.js","helpers/getGifs.js","components.js/GifGridItem.js","components.js/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACXC,mBAAS,IADE,mBACxCC,EADwC,KAC5BC,EAD4B,KAe/C,OACG,0BAAMC,SATY,SAACC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMd,2BACGO,KAAK,OACLC,MAAOT,EACPU,SAhBiB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,Y,uBCRhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,gEAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARpB,kBAWbM,GAXa,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEtC,OACG,yBAAKc,UAAU,0CACZ,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHAO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACbd,mBAAS,CAChCqB,KAAM,GACNa,SAAS,IAH2B,mBAChCC,EADgC,KACzBC,EADyB,KAcvC,OATAC,qBAAU,WACPxB,EAAQC,GACJwB,MAAK,SAAAC,GACAH,EAAS,CACNf,KAAMkB,EACNL,SAAS,SAGrB,CAACpB,IACGqB,EDX2BK,CAAa1B,GAAjCa,EAFwB,EAE9BN,KAAca,EAFgB,EAEhBA,QAEtB,OACG,oCACG,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAETH,EAAOJ,KAAI,SAAAC,GAAG,OACX,kBAAC,EAAD,eACGiB,IAAKjB,EAAIC,IACLD,UEbZkB,EAAe,WAAO,IAAD,EACK1C,mBAAS,CAAC,cADf,mBACxB2C,EADwB,KACZ5C,EADY,KAG/B,OACG,oCACG,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEM4C,EAAWpB,KAAI,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACG2B,IAAK3B,EACLA,SAAUA,U,MCX/B8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.85ef3e48.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n   const [inputValue, setInputValue] = useState('');\r\n\r\n   // Funciones\r\n   const handleInputChange = (e) => {\r\n      setInputValue(e.target.value);\r\n   }\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      if (inputValue.trim().length > 2) {\r\n         setCategories(cats => [inputValue ,...cats]);\r\n         setInputValue('');\r\n      }\r\n   }\r\n\r\n   return (\r\n      <form onSubmit={handleSubmit}>\r\n         <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n         />\r\n      </form>\r\n   )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n   const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}=&limit=10&api_key=zxTpVhDSzSIq8pKfUiHQi75YBaZzzJvT`;\r\n   const resp = await fetch(url);\r\n   const { data } = await resp.json();\r\n   const gifs = data.map(img => {\r\n      return {\r\n         id: img.id,\r\n         title: img.title,\r\n         url: img.images?.downsized_medium.url\r\n      }\r\n   });\r\n   return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n   return (\r\n      <div className=\"card animate__animated animate__fadeIn\">\r\n         <img src={url} alt={title} />\r\n         <p>{title}</p>\r\n      </div>\r\n   )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n   const { data: images, loading } = useFetchGifs(category);\r\n\r\n   return (\r\n      <>\r\n         <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n         {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n         <div className=\"card-grid\">\r\n            {\r\n               images.map(img => (\r\n                  <GifGridItem\r\n                     key={img.id}\r\n                     {...img}\r\n                  />\r\n               ))\r\n            }\r\n         </div>\r\n      </>\r\n   )\r\n}","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n   const [state, setState] = useState({\r\n      data: [],\r\n      loading: true\r\n   });\r\n   useEffect(() => {\r\n      getGifs(category)\r\n         .then(imgs => {\r\n               setState({\r\n                  data: imgs,\r\n                  loading: false\r\n               });\r\n         });\r\n   }, [category]);\r\n   return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components.js/AddCategory';\r\nimport { GifGrid } from './components.js/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n   const [categories, setCategories] = useState(['One Punch']);\r\n\r\n   return (\r\n      <>\r\n         <h2>GifExpertApp</h2>\r\n         <AddCategory setCategories={setCategories} />\r\n         <hr />\r\n         <ol>\r\n            {\r\n               categories.map(category => (\r\n                  <GifGrid \r\n                     key={category}\r\n                     category={category} \r\n                  />\r\n               ))\r\n            }\r\n         </ol>\r\n      </>\r\n   );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}